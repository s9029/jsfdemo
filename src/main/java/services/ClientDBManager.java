package services;

import java.io.IOException;
import java.sql.*;
import java.util.*;
import project.*;

import javax.enterprise.context.ApplicationScoped;

@ApplicationScoped
public class ClientDBManager {
	
	List<Integer> listID = new ArrayList<Integer>();

	private Connection conn;
	private Statement stmt;
	private PreparedStatement addClientStmt;
	private PreparedStatement getClientStmt;
	private PreparedStatement deleteAllClientStmt;
	private PreparedStatement deleteClientStmt;
	private PreparedStatement findClientStmt;

	public ClientDBManager() 
	{
		try 
		{
			/*
			Properties props = new Properties();
			
			try {
				props.load(ClassLoader.getSystemResourceAsStream("jdbs.properties"));
			} catch (IOException e) {
				e.printStackTrace();
			}
			*/
			
			
			conn = DriverManager
					.getConnection("jdbc:hsqldb:hsql://localhost/workdb");

			stmt = conn.createStatement();
			boolean clientTableExists = false;

			ResultSet rs = conn.getMetaData().getTables(null, null, null, null);

			while (rs.next()) 
			{
				if ("Client".equalsIgnoreCase(rs.getString("TABLE_NAME"))) 
				{
					clientTableExists = true;
					break;
				}
			}

			if (!clientTableExists) 
			{
				stmt.executeUpdate("CREATE TABLE client(id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,firstName varchar(20), surname varchar(20))");
			}

			addClientStmt = conn.prepareStatement("INSERT INTO client (firstName, surname)  VALUES (?, ?)");

			getClientStmt = conn.prepareStatement("SELECT * FROM client");
			
			deleteAllClientStmt = conn.prepareStatement("DELETE FROM client");
			
			findClientStmt = conn.prepareStatement("SELECT id FROM client WHERE surname = ?");
			
			deleteClientStmt = conn.prepareStatement("DELETE FROM client WHERE id = ?");

		} 
		catch (SQLException e) 
		{

			e.printStackTrace();
		}
	}

	public void addClient(Client client) 
	{
		try 
		{
			addClientStmt.setString(1, client.getFirstName());
			addClientStmt.setString(2, client.getSurname());
			addClientStmt.executeUpdate();
		} 
		catch (SQLException e) 
		{

			e.printStackTrace();
		}

	}

	public List<Client> getAllClient() 
	{
		List<Client> clients = new ArrayList<Client>();

		try 
		{
			ResultSet rs = getClientStmt.executeQuery();

			while (rs.next()) 
			{
				clients.add(new Client(rs.getString("firstName"), rs.getString("surname")));
			}

		} 
		catch (SQLException e) 
		{
			e.printStackTrace();
		}

		return clients;
	}
	
	public void deleteAllClient() 
	{
		try 
		{
			deleteAllClientStmt.executeUpdate();
		} 
		catch (SQLException e) 
		{
			e.printStackTrace();
		}
	}
	
	public List<Integer> findClientBySurname(String surname)
	{
		try 
		{
			List<Integer> result = new ArrayList<Integer>();
			findClientStmt.setString(1, surname);
			ResultSet rs = findClientStmt.executeQuery();
			while (rs.next())
				result.add(rs.getInt("ID"));
			return result;
		} 
		catch (SQLException e) 
		{
			e.printStackTrace();
		}
		return null;
	}
	
	public void deleteClient(List<Integer> list)
	{
		try 
		{
			for (Integer id : list)
			{
				deleteClientStmt.setInt(1, id);
				deleteClientStmt.executeUpdate();
			}
		} 
		catch (SQLException e) 
		{
			e.printStackTrace();
		}
	}

}
