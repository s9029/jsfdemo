package services;

import java.io.IOException;
import java.sql.*;
import java.util.*;

import project.*;

import javax.enterprise.context.ApplicationScoped;

@ApplicationScoped
public class AutoDBManager {

	private Connection conn;
	private Statement stmt;
	private PreparedStatement addAutoStmt;
	private PreparedStatement getAutoStmt;
	private PreparedStatement deleteAllAutoStmt;
	private PreparedStatement findAutoByModelStmt;
	private PreparedStatement findAutoByAutoTypeStmt;
	private PreparedStatement deleteAutoStmt;
	
	List<Integer> listID = new ArrayList<Integer>();
	
	public AutoDBManager() 
	{
		try 
		{
			/*
			Properties props = new Properties();
			
			try {
				props.load(ClassLoader.getSystemResourceAsStream("jdbs.properties"));
			} catch (IOException e) {
				e.printStackTrace();
			}
			*/
			
			conn = DriverManager
					.getConnection("jdbc:hsqldb:hsql://localhost/workdb");

			stmt = conn.createStatement();
			boolean AutoTableExists = false;

			ResultSet rs = conn.getMetaData().getTables(null, null, null, null);

			while (rs.next()) 
			{
				if ("Auto".equalsIgnoreCase(rs.getString("TABLE_NAME"))) 
				{
					AutoTableExists = true;
					break;
				}
			}

			if (!AutoTableExists) 
			{
				stmt.executeUpdate("CREATE TABLE Auto(id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,autotype varchar(40), model varchar(40), price integer, yearOfManufacture integer)");
			}


			addAutoStmt = conn.prepareStatement("INSERT INTO Auto (autotype, model, price, yearOfManufacture) VALUES (?, ?, ?, ?)");

			getAutoStmt = conn.prepareStatement("SELECT * FROM Auto");
			
			deleteAllAutoStmt = conn.prepareStatement("DELETE FROM Auto");
			
			findAutoByModelStmt = conn.prepareStatement("SELECT id FROM Auto WHERE model = ?");
			
			findAutoByAutoTypeStmt = conn.prepareStatement("SELECT id FROM Auto WHERE autotype = ?");
			
			deleteAutoStmt = conn.prepareStatement("DELETE FROM Auto WHERE id = ?");
		} 
		catch (SQLException e) 
		{

			e.printStackTrace();
		}
	}

	public void addAuto(Auto AutoCatalog) 
	{
		try 
		{
			addAutoStmt.setString(1, AutoCatalog.getAutoType().toString());
			addAutoStmt.setString(2, AutoCatalog.getModel());
			addAutoStmt.setInt(3, AutoCatalog.getPrice());
			addAutoStmt.setInt(4, AutoCatalog.getYearOfManufacture());
			addAutoStmt.executeUpdate();
		} 
		catch (SQLException e) 
		{

			e.printStackTrace();
		}

	}

	public List<Auto> getAllCars() 
	{
		List<Auto> Autos = new ArrayList<Auto>();
		try 
		{
			ResultSet rs = getAutoStmt.executeQuery();
			while (rs.next()) 
			{
				AutoType autoType = null;
				if (rs.getString("autotype").equals("VAN"))
					autoType = AutoType.VAN;
				if (rs.getString("autotype").equals("Sedan"))
					autoType = AutoType.Sedan;
				if (rs.getString("autotype").equals("Limuzyna"))
					autoType = AutoType.Limuzyna;
				if (rs.getString("autotype").equals("Kombi"))
					autoType = AutoType.Kombi;
				if (rs.getString("autotype").equals("Hatchback"))
					autoType = AutoType.Hatchback;
				
				Autos.add(new Auto(autoType,rs.getString("model"),rs.getInt("price"), rs.getInt("yearOfManufacture")));
			}

		} 
		catch (SQLException e) 
		{
			e.printStackTrace();
		}
		return Autos;
	}

	public void deleteAllCars() 
	{
		try 
		{
			deleteAllAutoStmt.executeUpdate();
		} 
		catch (SQLException e) 
		{
			e.printStackTrace();
		}
	}
	
	public List<Integer> findAutoByModel(String model)
	{
		try 
		{
			List<Integer> result = new ArrayList<Integer>();
			findAutoByModelStmt.setString(1, model);
			ResultSet rs = findAutoByModelStmt.executeQuery();
			while (rs.next())
				result.add(rs.getInt("ID"));	
			return result;
		} 
		catch (SQLException e) 
		{
			e.printStackTrace();
		}
		return null;
	}
	
	public List<Integer> findAutoByAutoType(AutoType autoType)
	{
		try 
		{
			List<Integer> result = new ArrayList<Integer>();
			findAutoByAutoTypeStmt.setString(1, autoType.toString());
			ResultSet rs = findAutoByAutoTypeStmt.executeQuery();
			while (rs.next())
				result.add(rs.getInt("ID"));
			return result;
		} 
		catch (SQLException e) 
		{
			e.printStackTrace();
		}
		return null;
	}
	
	public void deleteAuto(List<Integer> list)
	{
		try 
		{
			for (Integer id : list)
			{
				deleteAutoStmt.setInt(1, id);
				deleteAutoStmt.executeUpdate();
			}
		} 
		catch (SQLException e) 
		{
			e.printStackTrace();
		}
	}



}
